generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model diesel_schema_migrations {
  version String   @id @db.VarChar(50)
  run_on  DateTime @default(now()) @db.Timestamp(0)

  @@map("__diesel_schema_migrations")
}

model activities {
  id                Int      @id @default(autoincrement())
  market_name       String   @db.VarChar(255)
  nft_token_address String?  @db.VarChar(42)
  nft_token_id      String   @db.VarChar(50)
  event_type        Int      @db.TinyInt
  price             String   @db.VarChar(255)
  order_id          String?  @db.VarChar(255)
  auction_id        String?  @db.VarChar(255)
  msg_sender        String   @db.VarChar(42)
  created_at        DateTime @default(now()) @db.DateTime(0)
  updated_at        DateTime @default(now()) @db.DateTime(0)
}

model auctions {
  id                Int      @id @default(autoincrement())
  auction_id        String   @db.VarChar(255)
  nft_token_address String?  @db.VarChar(42)
  nft_token_id      String   @db.VarChar(50)
  seller            String   @db.VarChar(42)
  bidding_cap       String   @db.VarChar(255)
  min_bid_amount    String   @default("0") @db.VarChar(255)
  total_bids        String   @default("0") @db.VarChar(255)
  tax_rate          String   @db.VarChar(255)
  tax_amount        String   @default("0") @db.VarChar(255)
  start_time        String   @db.VarChar(255)
  end_time          String   @db.VarChar(255)
  winner            String?  @db.VarChar(255)
  winning_bid       String?  @db.VarChar(255)
  vault             String   @db.VarChar(255)
  sell_withdrawn    Boolean  @default(false)
  auction_status    Int      @db.TinyInt
  auction_type      Int      @db.TinyInt
  created_at        DateTime @default(now()) @db.DateTime(0)
  updated_at        DateTime @default(now()) @db.DateTime(0)
}

model bid_records {
  id                    Int      @id @default(autoincrement())
  auction_id            String   @db.VarChar(255)
  bidder                String   @db.VarChar(42)
  bid_market_name       String   @db.VarChar(255)
  bid_nft_token_address String   @db.VarChar(42)
  bid_nft_token_id      String   @db.VarChar(255)
  bid_amount            String   @db.VarChar(255)
  bid_withdrawn         Boolean  @default(false)
  bid_result            Boolean  @default(false)
  created_at            DateTime @default(now()) @db.DateTime(0)
  updated_at            DateTime @default(now()) @db.DateTime(0)
}

model delegate_records {
  id           Int      @id @default(autoincrement())
  account      String   @db.VarChar(42)
  pool_address String   @db.VarChar(42)
  event_type   Int      @db.TinyInt
  amount       String   @db.VarChar(255)
  created_at   DateTime @default(now()) @db.DateTime(0)
  updated_at   DateTime @default(now()) @db.DateTime(0)
}

model delegate_state {
  id             Int      @id @default(autoincrement())
  account        String   @db.VarChar(42)
  pool_address   String   @db.VarChar(42)
  total_staked   String   @default("0") @db.VarChar(255)
  total_withdraw String   @default("0") @db.VarChar(255)
  withdraw_able  String   @default("0") @db.VarChar(255)
  created_at     DateTime @default(now()) @db.DateTime(0)
  updated_at     DateTime @default(now()) @db.DateTime(0)

  @@unique([account, pool_address], map: "account_pool")
}

model market_info {
  id                     Int      @id @default(autoincrement())
  market_name            String   @unique(map: "market_name") @db.VarChar(255)
  supported_market_types String?  @db.VarChar(255)
  block_chain            String   @db.VarChar(255)
  nft_name               String   @db.VarChar(255)
  nft_symbol             String   @db.VarChar(50)
  nft_token_standard     String   @db.VarChar(50)
  nft_token_uri          String   @db.VarChar(255)
  nft_token_address      String   @unique(map: "nft_token_address") @db.VarChar(42)
  website                String?  @db.VarChar(255)
  discord                String?  @db.VarChar(255)
  twitter                String?  @db.VarChar(255)
  telegram               String?  @db.VarChar(255)
  guide_price            String   @default("0") @db.VarChar(255)
  description            String?  @db.Text
  created_at             DateTime @default(now()) @db.DateTime(0)
  updated_at             DateTime @default(now()) @db.DateTime(0)
}

model nfts {
  id                Int      @id @default(autoincrement())
  nft_token_address String?  @db.VarChar(42)
  nft_token_id      String   @db.VarChar(50)
  market_name       String   @db.VarChar(255)
  owner             String   @db.VarChar(42)
  price             String?  @db.VarChar(255)
  nft_status        Int      @db.TinyInt
  created_at        DateTime @default(now()) @db.DateTime(0)
  updated_at        DateTime @default(now()) @db.DateTime(0)
}

model orders {
  id           Int      @id @default(autoincrement())
  order_id     String   @unique(map: "order_id") @db.VarChar(255)
  seller       String   @db.VarChar(42)
  vault        String   @db.VarChar(42)
  price        String   @db.VarChar(255)
  buyer        String?  @db.VarChar(42)
  order_status Int      @db.TinyInt
  created_at   DateTime @default(now()) @db.DateTime(0)
  updated_at   DateTime @default(now()) @db.DateTime(0)
}

model pools {
  id            Int      @id @default(autoincrement())
  pool_name     String   @db.VarChar(255)
  pool_address  String   @unique(map: "pool_address") @db.VarChar(42)
  pool_status   Int      @db.TinyInt
  creator       String   @db.VarChar(42)
  creator_bonus String   @db.VarChar(16)
  creator_share String   @default("0") @db.VarChar(255)
  delegators    String   @default("0") @db.VarChar(255)
  total_staked  String   @default("0") @db.VarChar(255)
  used_staked   String   @default("0") @db.VarChar(255)
  created_at    DateTime @default(now()) @db.DateTime(0)
  updated_at    DateTime @default(now()) @db.DateTime(0)
}

model transactions {
  id         Int      @id @default(autoincrement())
  tx_hash    String   @unique(map: "tx_hash") @db.VarChar(255)
  tx_status  Int      @db.TinyInt
  tx_type    String?  @db.VarChar(50)
  msg_sender String?  @db.VarChar(42)
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)
}
